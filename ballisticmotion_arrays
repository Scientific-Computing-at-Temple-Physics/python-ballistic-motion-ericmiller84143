#Eric Miller
#Ballistic Motion in Python with numpy Arrays

import math as ma
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plot

g = input("What is the gravitational acceleration?: ")
v0 = input("What is the initital veloctiy?: ")
theta = input("What is the angle (in degrees) of the velocity above the ground?: ")
y = input("What is the initial height?: ")
t = input("What is the time step?: ")

h=y #initial height
theta = theta * ma.pi / 180  #convert to radians
x = np.zeros(1)  #first x position is assumed to be 0
y = np.array([y])    #first y position is inputed previously y
v_x = v0*ma.cos(theta)    #initalize velocity arrays with given conditions
v_y = np.array(v0*ma.sin(theta))

max_h = y[0]               #max height tracker; starts at initial height
flight_time  = 0.0      #total time of flight
size = y.size    #number of data points in y array
while (y[size-1]>0): #do calculations while the projectile is above the ground
    size = y.size
    v_y = v_y - g*t
    new_y_position = [y[size - 1] + v_y*t]   #new y position is final element of previous array plus distance covered over next time step
    new_x_position = [x[size - 1] + v_x*t]
    if (new_y_position>max_h):
        max_h = new_y_position[0]   #if the new height is greater than the old max, update max height

    y = np.append(y, new_y_position)
    x = np.append(x, new_x_position)     #find x position after time step
    flight_time = flight_time + t        #update the time of flight

print "The maximum height was", max_h
print "The time of flight was", flight_time
print "The range is", x[x.size-1]

plot.figure()       #plot y vs x in a figure
plot.plot(x,y)
plot.show()

#Need to check printed values for accuracy
